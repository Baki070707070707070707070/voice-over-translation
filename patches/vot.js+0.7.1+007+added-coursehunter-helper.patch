diff --git a/node_modules/vot.js/dist/config/sites.js b/node_modules/vot.js/dist/config/sites.js
index 8843c66..d934def 100644
--- a/node_modules/vot.js/dist/config/sites.js
+++ b/node_modules/vot.js/dist/config/sites.js
@@ -233,6 +233,7 @@ export default [
         url: "https://coursehunter.net/course/",
         match: /^coursehunter.net$/,
         selector: "#oframeplayer > pjsdiv:nth-of-type(1)",
+        needExtraData: true,
     },
     {
         host: VideoService.okru,
diff --git a/node_modules/vot.js/dist/types/helpers/coursehunter.d.ts b/node_modules/vot.js/dist/types/helpers/coursehunter.d.ts
new file mode 100644
index 0000000..927f640
--- /dev/null
+++ b/node_modules/vot.js/dist/types/helpers/coursehunter.d.ts
@@ -0,0 +1,7 @@
+export type Lesson = {
+  duration: number;
+  file: string;
+  id: string;
+  subtitle: string;
+  title: string;
+}
diff --git a/node_modules/vot.js/dist/types/helpers/coursehunter.js b/node_modules/vot.js/dist/types/helpers/coursehunter.js
new file mode 100644
index 0000000..693da49
--- /dev/null
+++ b/node_modules/vot.js/dist/types/helpers/coursehunter.js
@@ -0,0 +1 @@
+export {}
\ No newline at end of file
diff --git a/node_modules/vot.js/dist/types/helpers/udemy.d.ts b/node_modules/vot.js/dist/types/helpers/udemy.d.ts
index 681b49a..1be4a49 100644
--- a/node_modules/vot.js/dist/types/helpers/udemy.d.ts
+++ b/node_modules/vot.js/dist/types/helpers/udemy.d.ts
@@ -48,3 +48,4 @@ export type Course = {
   _class: "course";
   id: number;
   locale: Locale;
+}
\ No newline at end of file
diff --git a/node_modules/vot.js/dist/utils/helper.d.ts b/node_modules/vot.js/dist/utils/helper.d.ts
index c0fb605..57c4ebb 100644
--- a/node_modules/vot.js/dist/utils/helper.d.ts
+++ b/node_modules/vot.js/dist/utils/helper.d.ts
@@ -5,6 +5,7 @@ import * as Patreon from "../types/helpers/patreon.js";
 import * as BannedVideo from "../types/helpers/bannedvideo.js";
 import * as Kick from "../types/helpers/kick.js";
 import * as Udemy from "../types/helpers/udemy.js";
+import * as Coursehunter from "../types/helpers/coursehunter.js";
 import { VideoService, RequestLang, TranslationHelp } from "../types/yandex.js";
 export declare class MailRuHelper {
     getVideoData(videoId: string): Promise<MailRu.VideoInfo | undefined>;
@@ -99,6 +100,14 @@ export declare class UdemyHelper {
         detectedLanguage?: RequestLang
     }>;
 }
+export declare class CoursehunterHelper {
+    getLessonsData(courseId: number|string): Promise<Coursehunter.Lesson>;
+    getVideoData(): Promise<false | {
+        url: string;
+        duration: number;
+        title: string;
+    }>;
+}
 export default class VideoHelper {
     static [VideoService.mailru]: MailRuHelper;
     static [VideoService.weverse]: WeverseHelper;
@@ -108,5 +117,6 @@ export default class VideoHelper {
     static [VideoService.bannedvideo]: BannedVideoHelper;
     static [VideoService.kick]: KickHelper;
     static [VideoService.udemy]: UdemyHelper;
+    static [VideoService.coursehunter]: CoursehunterHelper;
 }
 //# sourceMappingURL=helper.d.ts.map
\ No newline at end of file
diff --git a/node_modules/vot.js/dist/utils/helper.js b/node_modules/vot.js/dist/utils/helper.js
index 585e7af..1053377 100644
--- a/node_modules/vot.js/dist/utils/helper.js
+++ b/node_modules/vot.js/dist/utils/helper.js
@@ -485,6 +485,33 @@ export class UdemyHelper {
         };
     }
 }
+export class CoursehunterHelper {
+    API_ORIGIN = "https://coursehunter.net/api/v1";
+
+    async getLessonsData(courseId) {
+        const response = await GM_fetch(
+            `${this.API_ORIGIN}/course/${courseId}/lessons`,
+        );
+        return await response.json();
+    }
+
+    async getVideoData() {
+        const courseId = window.course_id ?? +document.querySelector('input[name="course_id"]')?.value;
+        const lessonsData = window.lessons ?? (await this.getLessonsData(courseId));
+        const lessonId = +document.querySelector(".lessons-item_active")?.dataset?.index || 1;
+        const currentLesson = lessonsData?.[lessonId - 1];
+        const { file: videoUrl, duration, title } = currentLesson;
+        if (!videoUrl) {
+            return false;
+        }
+
+        return {
+            url: videoUrl,
+            duration,
+            title
+        };
+    }
+}
 export default class VideoHelper {
     static [VideoService.mailru] = new MailRuHelper();
     static [VideoService.weverse] = new WeverseHelper();
@@ -494,4 +521,5 @@ export default class VideoHelper {
     static [VideoService.bannedvideo] = new BannedVideoHelper();
     static [VideoService.kick] = new KickHelper();
     static [VideoService.udemy] = new UdemyHelper();
+    static [VideoService.coursehunter] = new CoursehunterHelper();
 }
diff --git a/node_modules/vot.js/dist/utils/videoData.js b/node_modules/vot.js/dist/utils/videoData.js
index 7c1acae..eaa6086 100644
--- a/node_modules/vot.js/dist/utils/videoData.js
+++ b/node_modules/vot.js/dist/utils/videoData.js
@@ -184,6 +184,10 @@ export async function getVideoID(service, video) {
         }
         case VideoService.yandexdisk:
             return /\/i\/([^/]+)/.exec(url.pathname)?.[1];
+        case VideoService.coursehunter: {
+            const courseId = /\/course\/([^/]+)/.exec(url.pathname)?.[1];
+            return courseId ? courseId + url.search : false;
+        }
         case VideoService.okru: {
             return /\/video\/(\d+)/.exec(url.pathname)?.[1];
         }

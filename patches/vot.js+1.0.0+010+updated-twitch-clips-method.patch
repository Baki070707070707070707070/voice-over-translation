diff --git a/node_modules/vot.js/dist/utils/videoData.js b/node_modules/vot.js/dist/utils/videoData.js
index eaa6086..8cbae24 100644
--- a/node_modules/vot.js/dist/utils/videoData.js
+++ b/node_modules/vot.js/dist/utils/videoData.js
@@ -1,7 +1,6 @@
 import sites from "../config/sites.js";
 import { VideoService } from "../types/yandex.js";
 import VideoHelper from "./helper.js";
-import { fetchWithTimeout } from "./utils.js";
 class VideoDataError extends Error {
     constructor(message) {
         super(message);
@@ -81,19 +80,37 @@ export async function getVideoID(service, video) {
                 return `videos/${url.searchParams.get("video")}`;
             }
             else if (isClipsDomain) {
+                const schema = document.querySelector(
+                    "script[type='application/ld+json']",
+                );
                 const pathname = url.pathname.slice(1);
+                if (schema) {
+                    const schemaJSON = JSON.parse(schema.innerText);
+                    const channelLink = schemaJSON["@graph"].find(
+                    (obj) => obj["@type"] === "VideoObject",
+                    )?.creator.url;
+
+                    const channelName = channelLink.replace("https://www.twitch.tv/", "");
+                    return `${channelName}/clip/${pathname}`;
+                }
+
                 const isEmbed = pathname === "embed";
-                const res = await fetchWithTimeout(`https://clips.twitch.tv/${isEmbed ? url.searchParams.get("clip") : url.pathname.slice(1)}`, {
-                    headers: {
-                        "User-Agent": "Googlebot/2.1 (+http://www.googlebot.com/bot.html)",
-                    },
-                });
-                const content = await res.text();
-                const channelLink = /"url":"https:\/\/www\.twitch\.tv\/([^"]+)"/.exec(content);
+                const channelLink = document.querySelector(
+                    isEmbed
+                    ? ".tw-link[data-test-selector='stream-info-card-component__stream-avatar-link']"
+                    : ".clips-player a:not([class])",
+                );
+
                 if (!channelLink) {
-                    return null;
+                    return;
                 }
-                return `${channelLink[1]}/clip/${isEmbed ? url.searchParams.get("clip") : pathname}`;
+
+                const channelName = channelLink.href.replace(
+                    "https://www.twitch.tv/",
+                    "",
+                );
+
+                return `${channelName}/clip/${isEmbed ? url.searchParams.get("clip") : pathname}`;
             }
             else if (clipPath) {
                 return clipPath[0];

diff --git a/node_modules/vot.js/dist/config/sites.js b/node_modules/vot.js/dist/config/sites.js
index 72d31bf..5b07eae 100644
--- a/node_modules/vot.js/dist/config/sites.js
+++ b/node_modules/vot.js/dist/config/sites.js
@@ -2,29 +2,63 @@ import { VideoService } from "../types/yandex.js";
 import { sitesInvidious, sitesPiped, sitesProxiTok, sitesPeertube, } from "./alternativeUrls.js";
 export default [
     {
+        additionalData: "mobile",
         host: VideoService.youtube,
         url: "https://youtu.be/",
-        match: /^((www.|m.)?youtube(-nocookie|kids)?.com)|(youtu.be)$/,
+        match: /^m.youtube.com$/,
+        selector: "shorts-video #player",
+    },
+    {
+        additionalData: "mobile",
+        host: VideoService.youtube,
+        url: "https://youtu.be/",
+        match: /^m.youtube.com$/,
+        selector: ".player-container",
+    },
+    {
+        host: VideoService.youtube,
+        url: "https://youtu.be/",
+        match: /^(www.)?youtube(-nocookie|kids)?.com$/,
+        selector: ".html5-video-container:not(#inline-player *)",
     },
     {
         host: VideoService.invidious,
         url: "https://youtu.be/",
         match: sitesInvidious,
+        selector: "#player",
     },
     {
         host: VideoService.piped,
         url: "https://youtu.be/",
         match: sitesPiped,
+        selector: ".shaka-video-container",
+    },
+    {
+        additionalData: "mobile",
+        host: VideoService.vk,
+        url: "https://vk.com/video?z=",
+        match: /^m.vk.(com|ru)$/,
+        selector: "vk-video-player",
+        shadowRoot: true,
+    },
+    {
+        additionalData: "clips",
+        host: VideoService.vk,
+        url: "https://vk.com/video?z=",
+        match: /^(www.|m.)?vk.(com|ru)$/,
+        selector: 'div[data-testid="clipcontainer-video"]',
     },
     {
         host: VideoService.vk,
         url: "https://vk.com/video?z=",
         match: /^(www.|m.)?vk.(com|ru)$/,
+        selector: ".videoplayer_media"
     },
     {
         host: VideoService.nine_gag,
         url: "https://9gag.com/gag/",
         match: /^9gag.com$/,
+        selector: ".video-post",
     },
     {
         host: VideoService.twitch,
@@ -35,139 +69,221 @@ export default [
             /^clips.twitch.tv$/,
             /^player.twitch.tv$/,
         ],
+        selector: ".video-ref, main > div > section > div > div > div",
     },
     {
         host: VideoService.proxitok,
         url: "https://www.tiktok.com/",
         match: sitesProxiTok,
+        selector: ".column.has-text-centered",
     },
     {
         host: VideoService.tiktok,
         url: "https://www.tiktok.com/",
         match: /^(www.)?tiktok.com$/,
+        selector: null
     },
     {
         host: VideoService.vimeo,
         url: "https://vimeo.com/",
         match: /^vimeo.com$/,
+        selector: ".player",
     },
     {
+        additionalData: "embed",
         host: VideoService.vimeo,
         url: "https://player.vimeo.com/",
         match: /^player.vimeo.com$/,
+        selector: ".player",
     },
     {
         host: VideoService.xvideos,
         url: "https://www.xvideos.com/",
         match: /^(www.)?(xvideos|xv-ru).com$/,
+        selector: ".video-bg-pic",
     },
     {
         host: VideoService.pornhub,
         url: "https://rt.pornhub.com/view_video.php?viewkey=",
         match: /^[a-z]+.pornhub.com$/,
+        selector: ".mainPlayerDiv > .video-element-wrapper-js > div",
+    },
+    {
+        additionalData: "embed",
+        host: VideoService.pornhub,
+        url: "https://rt.pornhub.com/view_video.php?viewkey=",
+        match: (url) =>
+            url.host.includes("pornhub.com") && url.pathname.startsWith("/embed/"),
+        selector: "#player",
     },
     {
         host: VideoService.twitter,
         url: "https://twitter.com/i/status/",
         match: /^twitter.com$/,
+        selector: 'div[data-testid="videoComponent"] > div:nth-child(1) > div',
     },
     {
         host: VideoService.rumble,
         url: "https://rumble.com/",
         match: /^rumble.com$/,
+        selector: "#videoPlayer > .videoPlayer-Rumble-cls > div",
     },
     {
         host: VideoService.facebook,
         url: "https://facebook.com/",
-        match: (url) => url.host.includes("facebook.com") &&
-            (url.pathname.includes("/videos/") || url.pathname.includes("/reel/")),
+        match: (url) =>
+            url.host.includes("facebook.com") && url.pathname.includes("/videos/"),
+        selector: 'div[role="main"] div[data-pagelet$="video" i]',
+    },
+    {
+        additionalData: "reels",
+        host: VideoService.facebook,
+        url: "https://facebook.com/",
+        match: (url) =>
+            url.host.includes("facebook.com") && url.pathname.includes("/reel/"),
+        selector: 'div[role="main"]',
     },
     {
         host: VideoService.rutube,
         url: "https://rutube.ru/video/",
         match: /^rutube.ru$/,
+        selector: ".video-player > div > div > div:nth-child(2)",
+    },
+    {
+        additionalData: "embed",
+        host: VideoService.rutube,
+        url: "https://rutube.ru/video/",
+        match: /^rutube.ru$/,
+        selector: "#app > div > div",
     },
     {
         host: VideoService.bilibili,
         url: "https://www.bilibili.com/video/",
         match: /^(www|m|player).bilibili.com$/,
+        selector: ".bpx-player-video-wrap",
+    },
+    // Добавляет лишние видео в обработчик
+    {
+        additionalData: "old", // /blackboard/webplayer/embed-old.html
+        host: VideoService.bilibili,
+        url: "https://www.bilibili.com/video/",
+        match: /^(www|m).bilibili.com$/,
+        selector: null,
     },
     {
         host: VideoService.mailru,
         url: "https://my.mail.ru/",
         match: /^my.mail.ru$/,
+        selector: "#b-video-wrapper",
     },
     {
         host: VideoService.bitchute,
         url: "https://www.bitchute.com/video/",
         match: /^(www.)?bitchute.com$/,
+        selector: ".video-js",
+    },
+    {
+        // ONLY IF YOU LOGINED TO COURSERA /learn/NAME/lecture/XXXX
+        host: VideoService.coursera,
+        url: "https://www.coursera.org/",
+        match: /coursera.org$/,
+        selector: ".vjs-v6",
+        needExtraData: true,
+    },
+    {
+        // ONLY IF YOU LOGINED TO UDEMY /course/NAME/learn/lecture/XXXX
+        host: VideoService.udemy,
+        url: "https://www.udemy.com/",
+        match: /udemy.com$/,
+        selector:
+            'div[data-purpose="curriculum-item-viewer-content"] > section > div > div > div > div:nth-of-type(2)',
+        needExtraData: true,
     },
     {
         host: VideoService.eporner,
         url: "https://www.eporner.com/",
         match: /^(www.)?eporner.com$/,
+        selector: ".vjs-v7",
     },
     {
         host: VideoService.peertube,
         url: "stub",
         match: sitesPeertube,
+        selector: ".vjs-v7",
     },
     {
         host: VideoService.dailymotion,
         url: "https://dai.ly/",
-        match: /^(www.)?dailymotion.com|dai.ly$/,
+        match: /^geo.dailymotion.com$/,
+        selector: ".player",
     },
     {
         host: VideoService.trovo,
         url: "https://trovo.live/s/",
         match: /^trovo.live$/,
+        selector: ".player-video",
     },
     {
         host: VideoService.yandexdisk,
         url: "https://yadi.sk/i/",
-        match: /^disk.yandex.ru|yadi.sk$/,
+        match: /^disk.yandex.ru$/,
+        selector: ".video-player__player > div:nth-child(1)",
+    },
+    {
+        host: VideoService.coursehunter,
+        url: "https://coursehunter.net/course/",
+        match: /^coursehunter.net$/,
+        selector: "#oframeplayer > pjsdiv:nth-of-type(1)",
     },
     {
         host: VideoService.okru,
         url: "https://ok.ru/video/",
         match: /^ok.ru$/,
+        selector: ".html5-vpl_vid",
     },
     {
         host: VideoService.googledrive,
         url: "https://drive.google.com/file/d/",
-        match: /^drive.google.com$/,
+        match: /^youtube.googleapis.com$/,
+        selector: ".html5-video-container",
     },
     {
         host: VideoService.bannedvideo,
         url: "https://madmaxworld.tv/watch?id=",
         match: /^(www.)?banned.video|madmaxworld.tv$/,
+        selector: ".vjs-v7",
         needExtraData: true,
     },
     {
         host: VideoService.weverse,
         url: "https://weverse.io/",
         match: /^weverse.io$/,
+        selector: ".webplayer-internal-source-wrapper",
         needExtraData: true,
     },
     {
         host: VideoService.newgrounds,
         url: "https://www.newgrounds.com/",
         match: /^(www.)?newgrounds.com$/,
+        selector: ".ng-video-player",
     },
     {
         host: VideoService.egghead,
         url: "https://egghead.io/",
         match: /^egghead.io$/,
+        selector: ".cueplayer-react-video-holder",
     },
     {
         host: VideoService.youku,
         url: "https://v.youku.com/",
         match: /^v.youku.com$/,
+        selector: "#ykPlayer",
     },
     {
         host: VideoService.archive,
         url: "https://archive.org/details/",
         match: /^archive.org$/,
+        selector: ".jw-media",
     },
     {
         host: VideoService.kodik,
@@ -179,6 +295,8 @@ export default [
         host: VideoService.patreon,
         url: "stub",
         match: /^(www.)?patreon.com$/,
+        selector:
+            'div[data-tag="post-card"] div[elevation="subtle"] > div > div > div > div',
         needExtraData: true,
     },
     {
diff --git a/node_modules/vot.js/dist/protos/yandex.d.ts b/node_modules/vot.js/dist/protos/yandex.d.ts
index 136b02e..86467bd 100644
--- a/node_modules/vot.js/dist/protos/yandex.d.ts
+++ b/node_modules/vot.js/dist/protos/yandex.d.ts
@@ -1,4 +1,4 @@
-import _m0 from "protobufjs/minimal.js";
+export type _m0 = typeof protobuf;
 export declare const protobufPackage = "";
 export declare enum StreamInterval {
     NO_CONNECTION = 0,
diff --git a/node_modules/vot.js/dist/protos/yandex.js b/node_modules/vot.js/dist/protos/yandex.js
index a05784f..3cc49f6 100644
--- a/node_modules/vot.js/dist/protos/yandex.js
+++ b/node_modules/vot.js/dist/protos/yandex.js
@@ -1,4 +1,4 @@
-import _m0 from "protobufjs/minimal.js";
+const _m0 = protobuf;
 export const protobufPackage = "";
 export var StreamInterval;
 (function (StreamInterval) {
diff --git a/node_modules/vot.js/dist/secure.js b/node_modules/vot.js/dist/secure.js
index 531d1ba..6f2ea63 100644
--- a/node_modules/vot.js/dist/secure.js
+++ b/node_modules/vot.js/dist/secure.js
@@ -1,4 +1,3 @@
-import crypto from "node:crypto";
 import config from "./config/config.js";
 const utf8Encoder = new TextEncoder();
 async function signHMAC(hashName, hmac, data) {
diff --git a/node_modules/vot.js/dist/types/yandex.d.ts b/node_modules/vot.js/dist/types/yandex.d.ts
index 3ef51ee..8540c74 100644
--- a/node_modules/vot.js/dist/types/yandex.d.ts
+++ b/node_modules/vot.js/dist/types/yandex.d.ts
@@ -33,11 +33,14 @@ export declare enum VideoService {
     mail_ru = "mailru",
     mailru = "mailru",
     bitchute = "bitchute",
+    coursera = "coursera",
+    udemy = "udemy",
     eporner = "eporner",
     peertube = "peertube",
     dailymotion = "dailymotion",
     trovo = "trovo",
     yandexdisk = "yandexdisk",
+    coursehunter = "coursehunter",
     ok_ru = "okru",
     okru = "okru",
     googledrive = "googledrive",
diff --git a/node_modules/vot.js/dist/types/yandex.js b/node_modules/vot.js/dist/types/yandex.js
index c19a055..dced47d 100644
--- a/node_modules/vot.js/dist/types/yandex.js
+++ b/node_modules/vot.js/dist/types/yandex.js
@@ -23,11 +23,14 @@ export var VideoService;
     VideoService["mail_ru"] = "mailru";
     VideoService["mailru"] = "mailru";
     VideoService["bitchute"] = "bitchute";
+    VideoService["coursera"] = "coursera";
+    VideoService["udemy"] = "udemy";
     VideoService["eporner"] = "eporner";
     VideoService["peertube"] = "peertube";
     VideoService["dailymotion"] = "dailymotion";
     VideoService["trovo"] = "trovo";
     VideoService["yandexdisk"] = "yandexdisk";
+    VideoService["coursehunter"] = "coursehunter";
     VideoService["ok_ru"] = "okru";
     VideoService["okru"] = "okru";
     VideoService["googledrive"] = "googledrive";
diff --git a/node_modules/vot.js/dist/utils/helper.js b/node_modules/vot.js/dist/utils/helper.js
index dc32c97..d2d638b 100644
--- a/node_modules/vot.js/dist/utils/helper.js
+++ b/node_modules/vot.js/dist/utils/helper.js
@@ -1,4 +1,3 @@
-import { parseFromString } from "dom-parser";
 import { getHmacSha1 } from "../secure.js";
 import { fetchWithTimeout } from "./utils.js";
 import config from "../config/config.js";
@@ -169,7 +168,8 @@ export class KodikHelper {
             });
             const content = await res.text();
             const [videoType, videoId, hash] = videoPath.split("/").filter((a) => a);
-            const doc = parseFromString(content);
+            const parser = new DOMParser()
+            const doc = parser.parseFromString(content, "text/html")
             const secureScript = Array.from(doc.getElementsByTagName("script")).filter((s) => s.innerHTML.includes(`videoId = "${videoId}"`));
             if (!secureScript.length) {
                 throw new VideoHelperError("Failed to find secure script");
diff --git a/node_modules/vot.js/dist/utils/videoData.js b/node_modules/vot.js/dist/utils/videoData.js
index 52bb7fe..9d28442 100644
--- a/node_modules/vot.js/dist/utils/videoData.js
+++ b/node_modules/vot.js/dist/utils/videoData.js
@@ -150,6 +150,8 @@ export async function getVideoID(service, videoURL) {
         }
         case VideoService.bitchute:
             return /(video|embed)\/([^/]+)/.exec(url.pathname)?.[2];
+        case VideoService.coursera:
+            return /learn\/([^/]+)\/lecture\/([^/]+)/.exec(url.pathname)?.[0]; // <-- COURSE PASSING (IF YOU LOGINED TO COURSERA)
         case VideoService.eporner:
             return /video-([^/]+)\/([^/]+)/.exec(url.pathname)?.[0];
         case VideoService.peertube:

diff --git a/node_modules/vot.js/dist/config/sites.js b/node_modules/vot.js/dist/config/sites.js
index af5d10f..368651d 100644
--- a/node_modules/vot.js/dist/config/sites.js
+++ b/node_modules/vot.js/dist/config/sites.js
@@ -331,6 +331,14 @@ export default [
         selector: "#oframeplayer > pjsdiv:nth-of-type(1)",
         needExtraData: true,
     },
+    {
+        host: VideoService.udemy,
+        url: "https://www.udemy.com/",
+        match: /udemy.com$/,
+        selector:
+            'div[data-purpose="curriculum-item-viewer-content"] > section > div > div > div > div:nth-of-type(2)',
+        needExtraData: true,
+    },
     {
         host: VideoService.sap,
         url: "https://learning.sap.com/courses/",
diff --git a/node_modules/vot.js/dist/helpers/index.d.ts b/node_modules/vot.js/dist/helpers/index.d.ts
index e88cc63..3d5f3da 100644
--- a/node_modules/vot.js/dist/helpers/index.d.ts
+++ b/node_modules/vot.js/dist/helpers/index.d.ts
@@ -12,6 +12,7 @@ import NineAnimeTVHelper from "./nineanimetv.js";
 import OdyseeHelper from "./odysee.js";
 import CoursehunterHelper from "./coursehunter.js";
 import TwitchHelper from "./twitch.js";
+import UdemyHelper from "./udemy.js";
 import SapHelper from "./sap.js";
 export * as MailRuHelper from "./mailru.js";
 export * as WeverseHelper from "./weverse.js";
@@ -26,6 +27,7 @@ export * as NineAnimeTVHelper from "./nineanimetv.js";
 export * as OdyseeHelper from "./odysee.js";
 export * as CoursehunterHelper from "./coursehunter.js";
 export * as TwitchHelper from "./twitch.js";
+export * as UdemyHelper from "./udemy.js";
 export * as SapHelper from "./sap.js";
 export default class VideoHelper {
     static readonly [VideoService.mailru]: MailRuHelper;
@@ -41,6 +43,7 @@ export default class VideoHelper {
     static readonly [VideoService.odysee]: OdyseeHelper;
     static readonly [VideoService.twitch]: TwitchHelper;
     static readonly [VideoService.coursehunter]: CoursehunterHelper;
+    static readonly [VideoService.udemy]: UdemyHelper;
     static readonly [VideoService.sap]: SapHelper;
 }
 //# sourceMappingURL=index.d.ts.map
\ No newline at end of file
diff --git a/node_modules/vot.js/dist/helpers/index.js b/node_modules/vot.js/dist/helpers/index.js
index 4f1ede9..b7f0fa2 100644
--- a/node_modules/vot.js/dist/helpers/index.js
+++ b/node_modules/vot.js/dist/helpers/index.js
@@ -12,6 +12,7 @@ import NineAnimeTVHelper from "./nineanimetv.js";
 import OdyseeHelper from "./odysee.js";
 import CoursehunterHelper from "./coursehunter.js";
 import TwitchHelper from "./twitch.js";
+import UdemyHelper from "./udemy.js";
 import SapHelper from "./sap.js";
 export * as MailRuHelper from "./mailru.js";
 export * as WeverseHelper from "./weverse.js";
@@ -26,6 +27,7 @@ export * as NineAnimeTVHelper from "./nineanimetv.js";
 export * as OdyseeHelper from "./odysee.js";
 export * as CoursehunterHelper from "./coursehunter.js";
 export * as TwitchHelper from "./twitch.js";
+export * as UdemyHelper from "./udemy.js";
 export * as SapHelper from "./sap.js";
 export default class VideoHelper {
     static [VideoService.mailru] = new MailRuHelper();
@@ -41,5 +43,6 @@ export default class VideoHelper {
     static [VideoService.odysee] = new OdyseeHelper();
     static [VideoService.twitch] = new TwitchHelper();
     static [VideoService.coursehunter] = new CoursehunterHelper();
+    static [VideoService.udemy] = new UdemyHelper();
     static [VideoService.sap] = new SapHelper();
 }
diff --git a/node_modules/vot.js/dist/helpers/udemy.d.ts b/node_modules/vot.js/dist/helpers/udemy.d.ts
new file mode 100644
index 0000000..11e0918
--- /dev/null
+++ b/node_modules/vot.js/dist/helpers/udemy.d.ts
@@ -0,0 +1,21 @@
+import * as Udemy from "../types/helpers/udemy.js";
+
+export declare class UdemyHelper {
+  getModuleData(): {
+      courseId?: number;
+  }
+  getLectureId(): null | string;
+  getLectureData(courseId: number|string, lectureId: number|string): Promise<Udemy.Lecture>;
+  getCourseLang(courseId: number|string): Promise<Udemy.Course>;
+  findVideoUrl(sources: Udemy.MediaSource[]): string|null;
+  findSubtitleUrl(captions: Udemy.Caption[], detectedLanguage: RequestLang): string|null;
+  getVideoData(videoId: string): Promise<undefined | {
+      url: string;
+      duration: number;
+      title: string;
+      description: string;
+      translationHelp: TranslationHelp[] | null;
+      detectedLanguage?: RequestLang;
+  }>;
+  getVideoId(url: URL): Promise<string | undefined>;
+}
\ No newline at end of file
diff --git a/node_modules/vot.js/dist/helpers/udemy.js b/node_modules/vot.js/dist/helpers/udemy.js
new file mode 100644
index 0000000..9b4fbe5
--- /dev/null
+++ b/node_modules/vot.js/dist/helpers/udemy.js
@@ -0,0 +1,126 @@
+import { BaseHelper } from "./base.js";
+import debug from "../../../../src/utils/debug.js";
+import { langTo6391 } from "../../../../src/utils/utils.js";
+import { localizationProvider } from "../../../../src/localization/localizationProvider.js";
+import { availableLangs } from "../consts.js";
+import sites from "../config/sites.js";
+import { VideoService } from "../types/yandex.js";
+
+export default class UdemyHelper extends BaseHelper {
+  API_ORIGIN = "https://www.udemy.com/api-2.0";
+
+  getModuleData() {
+      const moduleArgs = document.querySelector(
+          ".ud-app-loader[data-module-id='course-taking']",
+      )?.dataset?.moduleArgs;
+      if (!moduleArgs) {
+          console.error(localizationProvider.get("udemyModuleArgsNotFound"));
+          return {};
+      }
+      return JSON.parse(moduleArgs);
+  }
+
+  getLectureId() {
+      return /learn\/lecture\/([^/]+)/.exec(window.location.pathname)?.[1];
+  }
+
+  async getLectureData(courseId, lectureId) {
+      const res = await this.fetch(
+          `${this.API_ORIGIN}/users/me/subscribed-courses/${courseId}/lectures/${lectureId}/?` +
+          new URLSearchParams({
+              "fields[lecture]": "title,description,asset",
+              "fields[asset]": "length,media_sources,captions",
+          })
+      );
+      return await res.json();
+  }
+
+  async getCourseLang(courseId) {
+      const res = await this.fetch(
+          `${this.API_ORIGIN}/users/me/subscribed-courses/${courseId}?` +
+          new URLSearchParams({
+              "fields[course]": "locale",
+          })
+      );
+      return await res.json();
+  }
+
+  findVideoUrl(sources) {
+      return sources?.find((src) => src.type === "video/mp4")?.src;
+  }
+
+  findSubtitleUrl(captions, detectedLanguage) {
+      let subtitle = captions?.find(
+          (caption) => langTo6391(caption.locale_id) === detectedLanguage,
+      );
+
+      if (!subtitle) {
+          subtitle = captions?.find(
+              (caption) => langTo6391(caption.locale_id) === "en",
+          ) ?? captions?.[0];
+      }
+
+      return subtitle?.url;
+  }
+
+  async getVideoData(videoId) {
+      const { courseId } = this.getModuleData();
+      if (!courseId) {
+          return undefined;
+      }
+
+      const lectureId = this.getLectureId();
+      debug.log(`[Udemy] courseId: ${courseId}, lectureId: ${lectureId}`)
+      if (!lectureId) {
+          return undefined;
+      }
+
+      const { title, description, asset } = await this.getLectureData(courseId, lectureId);
+      const { length: duration, media_sources, captions } = asset;
+
+      const videoUrl = this.findVideoUrl(media_sources);
+      if (!videoUrl) {
+          console.log("Failed to find .mp4 video file in media_sources", media_sources);
+          return undefined;
+      }
+
+      const courseLangData = await this.getCourseLang(courseId);
+      let { locale: { locale: courseLang } } = courseLangData;
+      courseLang = courseLang ? langTo6391(courseLang) : "en";
+      if (!availableLangs.includes(courseLang)) {
+          courseLang = "en";
+      }
+
+      const subtitleUrl = this.findSubtitleUrl(captions, courseLang);
+      if (!subtitleUrl) {
+          console.log("Failed to find subtitle file in captions", captions)
+      }
+
+      return {
+          ...subtitleUrl ? {
+              url: sites.find((s) => s.host === VideoService.udemy).url + videoId,
+              translationHelp: [
+                  {
+                      target: "subtitles_file_url",
+                      targetUrl: subtitleUrl,
+                  },
+                  {
+                      target: "video_file_url",
+                      targetUrl: videoUrl,
+                  },
+              ],
+              detectedLanguage: courseLang,
+          } : {
+              url: videoUrl,
+              translationHelp: null,
+          },
+          duration,
+          title,
+          description,
+      };
+  }
+
+  async getVideoId(url) {
+      return url.pathname.slice(1);
+  }
+}
\ No newline at end of file
diff --git a/node_modules/vot.js/dist/types/helpers/udemy.d.ts b/node_modules/vot.js/dist/types/helpers/udemy.d.ts
new file mode 100644
index 0000000..c097789
--- /dev/null
+++ b/node_modules/vot.js/dist/types/helpers/udemy.d.ts
@@ -0,0 +1,51 @@
+import { ISODate } from "../utils.js";
+
+export type Caption = {
+  _class: "caption";
+  asset_id: number;
+  created: ISODate;
+  file_name: string;
+  id: number;
+  locale_id: string;
+  source: string;
+  status: number;
+  title: string;
+  url: string;
+  video_label: string;
+};
+
+export type MediaSource = {
+  label: string;
+  src: string;
+  type: string;
+};
+
+export type Asset = {
+  _class: "asset";
+  captions: Caption[];
+  id: number;
+  length: number;
+  media_sources: MediaSource[];
+}
+
+export type Lecture = {
+  _class: "lecture";
+  asset: Asset[];
+  description: string;
+  id: number;
+  title: string;
+}
+
+export type Locale = {
+  _class: "locale";
+  english_title: string;
+  locale: string;
+  simple_english_title: string;
+  title: string;
+}
+
+export type Course = {
+  _class: "course";
+  id: number;
+  locale: Locale;
+}
diff --git a/node_modules/vot.js/dist/types/helpers/udemy.js b/node_modules/vot.js/dist/types/helpers/udemy.js
new file mode 100644
index 0000000..0aacd4e
--- /dev/null
+++ b/node_modules/vot.js/dist/types/helpers/udemy.js
@@ -0,0 +1 @@
+export {}
\ No newline at end of file
diff --git a/node_modules/vot.js/dist/types/yandex.d.ts b/node_modules/vot.js/dist/types/yandex.d.ts
index f0dda17..fd5631d 100644
--- a/node_modules/vot.js/dist/types/yandex.d.ts
+++ b/node_modules/vot.js/dist/types/yandex.d.ts
@@ -58,6 +58,7 @@ export declare enum VideoService {
     nineanimetv = "nineanimetv",
     odysee = "odysee",
     coursehunter = "coursehunter",
+    udemy = "udemy",
     sap = "sap"
 }
 export type ServiceConf = {
diff --git a/node_modules/vot.js/dist/types/yandex.js b/node_modules/vot.js/dist/types/yandex.js
index 682069d..7adb768 100644
--- a/node_modules/vot.js/dist/types/yandex.js
+++ b/node_modules/vot.js/dist/types/yandex.js
@@ -48,6 +48,7 @@ export var VideoService;
     VideoService["nineanimetv"] = "nineanimetv";
     VideoService["odysee"] = "odysee";
     VideoService["coursehunter"] = "coursehunter";
+    VideoService["udemy"] = "udemy";
     VideoService["sap"] = "sap";
 })(VideoService || (VideoService = {}));
 export var VideoTranslationStatus;

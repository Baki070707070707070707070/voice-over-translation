diff --git a/node_modules/vot.js/dist/config/sites.js b/node_modules/vot.js/dist/config/sites.js
index 6ff12e4..0530553 100644
--- a/node_modules/vot.js/dist/config/sites.js
+++ b/node_modules/vot.js/dist/config/sites.js
@@ -342,6 +342,14 @@ export default [
             'div[data-purpose="curriculum-item-viewer-content"] > section > div > div > div > div:nth-of-type(2)',
         needExtraData: true,
     },
+    {
+        // ONLY IF YOU LOGINED TO COURSERA /learn/NAME/lecture/XXXX
+        host: VideoService.coursera,
+        url: "https://www.coursera.org/",
+        match: /coursera.org$/,
+        selector: ".vjs-v6",
+        needExtraData: true,
+    },
     {
         host: VideoService.sap,
         url: "https://learning.sap.com/courses/",
diff --git a/node_modules/vot.js/dist/helpers/coursera.d.ts b/node_modules/vot.js/dist/helpers/coursera.d.ts
new file mode 100644
index 0000000..a06a152
--- /dev/null
+++ b/node_modules/vot.js/dist/helpers/coursera.d.ts
@@ -0,0 +1,16 @@
+import * as Coursera from "../types/helpers/coursera.js";
+
+export declare class CourseraHelper {
+  getCourseData(courseId: number|string): Promise<Coursera.Course>;
+  getPlayer(): HTMLDivElement | null;
+  getPlayerData(): Coursera.PlayerData;
+  findVideoUrl(sources: Coursera.Source[]): string|null;
+  findSubtitleUrl(captions: Coursera.Track[], detectedLanguage: RequestLang): string|null;
+  getVideoData(videoId: string): Promise<false | {
+      url: string;
+      duration: number;
+      translationHelp: TranslationHelp[] | null;
+      detectedLanguage?: RequestLang;
+  }>;
+  getVideoId(url: URL): Promise<string | undefined>;
+}
\ No newline at end of file
diff --git a/node_modules/vot.js/dist/helpers/coursera.js b/node_modules/vot.js/dist/helpers/coursera.js
new file mode 100644
index 0000000..7822955
--- /dev/null
+++ b/node_modules/vot.js/dist/helpers/coursera.js
@@ -0,0 +1,94 @@
+import { BaseHelper } from "./base.js";
+import { langTo6391 } from "../../../../src/utils/utils.js";
+import { availableLangs } from "vot.js/consts";
+import sites from "vot.js/sites";
+import { VideoService } from "../types/yandex.js";
+
+export default class CourseraHelper extends BaseHelper {
+    API_ORIGIN = "https://www.coursera.org/api";
+
+    async getCourseData(courseId) {
+        const response = await this.fetch(
+            `${this.API_ORIGIN}/onDemandCourses.v1/${courseId}`,
+        );
+        const resJSON = await response.json();
+        return resJSON?.elements?.[0];
+    }
+
+    getPlayer() {
+        return document.querySelector(".vjs-v6");
+    }
+
+    getPlayerData() {
+        return this.getPlayer()?.player;
+    }
+
+    findVideoUrl(sources) {
+        return sources?.find((src) => src.type === "video/mp4")?.src;
+    }
+
+    findSubtitleUrl(captions, detectedLanguage) {
+        let subtitle = captions?.find(
+            (caption) => langTo6391(caption.srclang) === detectedLanguage,
+        );
+
+        if (!subtitle) {
+            subtitle = captions?.find(
+                (caption) => langTo6391(caption.srclang) === "en",
+            ) || captions?.[0];
+        }
+
+        return subtitle?.src;
+    }
+
+    async getVideoData(videoId) {
+        const data = this.getPlayerData();
+
+        const { duration } = data?.cache_ || {};
+        const { courseId, tracks, sources } = data?.options_ || {};
+
+        const videoUrl = this.findVideoUrl(sources);
+        if (!videoUrl) {
+            console.log("Failed to find .mp4 video file in sources", sources);
+            return undefined;
+        }
+
+        const { primaryLanguageCodes } = await this.getCourseData(courseId);
+        let courseLang = primaryLanguageCodes?.[0];
+        courseLang = courseLang ? langTo6391(courseLang) : "en";
+
+        if (!availableLangs.includes(courseLang)) {
+            courseLang = "en";
+        }
+
+        const subtitleUrl = this.findSubtitleUrl(tracks, courseLang);
+        if (!subtitleUrl) {
+            console.log("Failed to find subtitle file in tracks", tracks)
+        }
+
+        return {
+            ...subtitleUrl ? {
+                url: sites.find((s) => s.host === VideoService.coursera).url + videoId,
+                translationHelp: [
+                    {
+                        target: "subtitles_file_url",
+                        targetUrl: subtitleUrl,
+                    },
+                    {
+                        target: "video_file_url",
+                        targetUrl: videoUrl,
+                    },
+                ],
+                detectedLanguage: courseLang,
+            } : {
+                url: videoUrl,
+                translationHelp: null,
+            },
+            duration,
+        };
+    }
+
+    async getVideoId(url) {
+        return /learn\/([^/]+)\/lecture\/([^/]+)/.exec(url.pathname)?.[0]; // <-- COURSE PASSING (IF YOU LOGINED TO COURSERA)
+    }
+}
\ No newline at end of file
diff --git a/node_modules/vot.js/dist/helpers/index.d.ts b/node_modules/vot.js/dist/helpers/index.d.ts
index 59b2575..fcac90a 100644
--- a/node_modules/vot.js/dist/helpers/index.d.ts
+++ b/node_modules/vot.js/dist/helpers/index.d.ts
@@ -12,6 +12,7 @@ import NineAnimeTVHelper from "./nineanimetv.js";
 import OdyseeHelper from "./odysee.js";
 import CoursehunterHelper from "./coursehunter.js";
 import UdemyHelper from "./udemy.js";
+import CourseraHelper from "./coursera.js";
 import TwitchHelper from "./twitch.js";
 import SapHelper from "./sap.js";
 import LinkedinHelper from "./linkedin.js";
@@ -29,6 +30,7 @@ export * as OdyseeHelper from "./odysee.js";
 export * as CoursehunterHelper from "./coursehunter.js";
 export * as TwitchHelper from "./twitch.js";
 export * as UdemyHelper from "./udemy.js";
+export * as CourseraHelper from "./coursera.js";
 export * as SapHelper from "./sap.js";
 export * as LinkedinHelper from "./linkedin.js";
 export default class VideoHelper {
@@ -46,6 +48,7 @@ export default class VideoHelper {
     static readonly [VideoService.twitch]: TwitchHelper;
     static readonly [VideoService.coursehunter]: CoursehunterHelper;
     static readonly [VideoService.udemy]: UdemyHelper;
+    static readonly [VideoService.coursera]: CourseraHelper;
     static readonly [VideoService.sap]: SapHelper;
     static readonly [VideoService.linkedin]: LinkedinHelper;
 }
diff --git a/node_modules/vot.js/dist/helpers/index.js b/node_modules/vot.js/dist/helpers/index.js
index 966d2c1..b804d61 100644
--- a/node_modules/vot.js/dist/helpers/index.js
+++ b/node_modules/vot.js/dist/helpers/index.js
@@ -13,6 +13,7 @@ import OdyseeHelper from "./odysee.js";
 import CoursehunterHelper from "./coursehunter.js";
 import TwitchHelper from "./twitch.js";
 import UdemyHelper from "./udemy.js";
+import CourseraHelper from "./coursera.js";
 import SapHelper from "./sap.js";
 import LinkedinHelper from "./linkedin.js";
 export * as MailRuHelper from "./mailru.js";
@@ -29,6 +30,7 @@ export * as OdyseeHelper from "./odysee.js";
 export * as CoursehunterHelper from "./coursehunter.js";
 export * as TwitchHelper from "./twitch.js";
 export * as UdemyHelper from "./udemy.js";
+export * as CourseraHelper from "./udemy.js";
 export * as SapHelper from "./sap.js";
 export * as LinkedinHelper from "./linkedin.js";
 export default class VideoHelper {
@@ -46,6 +48,7 @@ export default class VideoHelper {
     static [VideoService.twitch] = new TwitchHelper();
     static [VideoService.coursehunter] = new CoursehunterHelper();
     static [VideoService.udemy] = new UdemyHelper();
+    static [VideoService.coursera] = new CourseraHelper();
     static [VideoService.sap] = new SapHelper();
     static [VideoService.linkedin] = new LinkedinHelper();
 }
diff --git a/node_modules/vot.js/dist/types/helpers/coursera.d.ts b/node_modules/vot.js/dist/types/helpers/coursera.d.ts
new file mode 100644
index 0000000..15d378e
--- /dev/null
+++ b/node_modules/vot.js/dist/types/helpers/coursera.d.ts
@@ -0,0 +1,52 @@
+export type Course = {
+  categoryIds: unknown[];
+  courseStatus: string;
+  description: string;
+  enrollableSiteUserRoles: unknown[];
+  estimatedWorkload: string;
+  id: string;
+  instructorIds: string[];
+  isReal: boolean;
+  isRestrictedMembership: boolean;
+  isSubtitleTranslationEnabled: boolean;
+  isVerificationEnabled: boolean;
+  launchedAt: number;
+  name: string;
+  partnerIds: string[];
+  previewUserIds: unknown[];
+  primaryLanguageCodes: string[];
+  promoPhoto: string;
+  slug: string;
+  subtitleLanguageCodes: string[];
+  verificationEnabledAt: number;
+}
+
+// not fully typed
+export type Cache = {
+  duration: number;
+}
+
+export type Source = {
+  src: string;
+  type: string;
+}
+
+export type Track = {
+  kind: "captions";
+  label: string;
+  src: string;
+  srclang: string;
+}
+
+// not fully typed
+export type Options = {
+  courseId: string;
+  sources: Source[];
+  tracks: Track[]
+}
+
+// not fully typed
+export type PlayerData = {
+  cache_: Cache;
+  options_: Options;
+}
\ No newline at end of file
diff --git a/node_modules/vot.js/dist/types/helpers/coursera.js b/node_modules/vot.js/dist/types/helpers/coursera.js
new file mode 100644
index 0000000..0aacd4e
--- /dev/null
+++ b/node_modules/vot.js/dist/types/helpers/coursera.js
@@ -0,0 +1 @@
+export {}
\ No newline at end of file
diff --git a/node_modules/vot.js/dist/types/yandex.d.ts b/node_modules/vot.js/dist/types/yandex.d.ts
index 7c7e7d7..396141c 100644
--- a/node_modules/vot.js/dist/types/yandex.d.ts
+++ b/node_modules/vot.js/dist/types/yandex.d.ts
@@ -59,6 +59,7 @@ export declare enum VideoService {
     odysee = "odysee",
     coursehunter = "coursehunter",
     udemy = "udemy",
+    coursera = "coursera",
     sap = "sap",
     watchpornto = "watchpornto",
     linkedin = "linkedin"
diff --git a/node_modules/vot.js/dist/types/yandex.js b/node_modules/vot.js/dist/types/yandex.js
index b7178bc..59184fa 100644
--- a/node_modules/vot.js/dist/types/yandex.js
+++ b/node_modules/vot.js/dist/types/yandex.js
@@ -49,6 +49,7 @@ export var VideoService;
     VideoService["odysee"] = "odysee";
     VideoService["coursehunter"] = "coursehunter";
     VideoService["udemy"] = "udemy";
+    VideoService["coursera"] = "coursera";
     VideoService["sap"] = "sap";
     VideoService["watchpornto"] = "watchpornto";
     VideoService["linkedin"] = "linkedin";
